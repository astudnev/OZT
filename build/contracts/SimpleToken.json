{
  "contractName": "SimpleToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x60c0604052600b60808190527f53696d706c65546f6b656e00000000000000000000000000000000000000000060a090815261003e91600391906100bf565b506040805180820190915260038082527f53494d00000000000000000000000000000000000000000000000000000000006020909201918252610083916004916100bf565b50601260055561271060065534801561009b57600080fd5b506006546000818155600160a060020a03331681526001602052604090205561015a565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061010057805160ff191683800117855561012d565b8280016001018555821561012d579182015b8281111561012d578251825591602001919060010190610112565b5061013992915061013d565b5090565b61015791905b808211156101395760008155600101610143565b90565b610897806101696000396000f3006080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461018057806323b872dd146101a75780632ff2e9dc146101d1578063313ce567146101e657806366188463146101fb57806370a082311461021f57806395d89b4114610240578063a9059cbb14610255578063d73dd62314610279578063dd62ed3e1461029d575b600080fd5b3480156100ca57600080fd5b506100d36102c4565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b5061016c600160a060020a0360043516602435610352565b604080519115158252519081900360200190f35b34801561018c57600080fd5b506101956103f5565b60408051918252519081900360200190f35b3480156101b357600080fd5b5061016c600160a060020a03600435811690602435166044356103fb565b3480156101dd57600080fd5b50610195610525565b3480156101f257600080fd5b5061019561052b565b34801561020757600080fd5b5061016c600160a060020a0360043516602435610531565b34801561022b57600080fd5b50610195600160a060020a036004351661062a565b34801561024c57600080fd5b506100d3610645565b34801561026157600080fd5b5061016c600160a060020a03600435166024356106a0565b34801561028557600080fd5b5061016c600160a060020a0360043516602435610776565b3480156102a957600080fd5b50610195600160a060020a0360043581169060243516610818565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b505050505081565b60008115806103845750600160a060020a03338116600090815260026020908152604080832093871683529290522054155b151561038f57600080fd5b600160a060020a03338116600081815260026020908152604080832094881680845294825291829020869055815186815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b60005481565b600080600160a060020a038416151561041357600080fd5b50600160a060020a03808516600081815260026020908152604080832033909516835293815283822054928252600190529190912054610459908463ffffffff61084316565b600160a060020a03808716600090815260016020526040808220939093559086168152205461048e908463ffffffff61085516565b600160a060020a0385166000908152600160205260409020556104b7818463ffffffff61084316565b600160a060020a038087166000818152600260209081526040808320338616845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001949350505050565b60065481565b60055481565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120548083111561058e57600160a060020a0333811660009081526002602090815260408083209388168352929052908120556105c5565b61059e818463ffffffff61084316565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b600160a060020a031660009081526001602052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561034a5780601f1061031f5761010080835404028352916020019161034a565b6000600160a060020a03831615156106b757600080fd5b600160a060020a0333166000908152600160205260409020546106e0908363ffffffff61084316565b600160a060020a033381166000908152600160205260408082209390935590851681522054610715908363ffffffff61085516565b600160a060020a038085166000818152600160209081526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600192915050565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120546107ae908363ffffffff61085516565b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561084f57fe5b50900390565b60008282018381101561086457fe5b93925050505600a165627a7a72305820f42dc60f20f8c3de30bba852a7049ab067e3a95907d56bc51a02ae968ef38c960029",
  "deployedBytecode": "0x6080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100be578063095ea7b31461014857806318160ddd1461018057806323b872dd146101a75780632ff2e9dc146101d1578063313ce567146101e657806366188463146101fb57806370a082311461021f57806395d89b4114610240578063a9059cbb14610255578063d73dd62314610279578063dd62ed3e1461029d575b600080fd5b3480156100ca57600080fd5b506100d36102c4565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561010d5781810151838201526020016100f5565b50505050905090810190601f16801561013a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015457600080fd5b5061016c600160a060020a0360043516602435610352565b604080519115158252519081900360200190f35b34801561018c57600080fd5b506101956103f5565b60408051918252519081900360200190f35b3480156101b357600080fd5b5061016c600160a060020a03600435811690602435166044356103fb565b3480156101dd57600080fd5b50610195610525565b3480156101f257600080fd5b5061019561052b565b34801561020757600080fd5b5061016c600160a060020a0360043516602435610531565b34801561022b57600080fd5b50610195600160a060020a036004351661062a565b34801561024c57600080fd5b506100d3610645565b34801561026157600080fd5b5061016c600160a060020a03600435166024356106a0565b34801561028557600080fd5b5061016c600160a060020a0360043516602435610776565b3480156102a957600080fd5b50610195600160a060020a0360043581169060243516610818565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b505050505081565b60008115806103845750600160a060020a03338116600090815260026020908152604080832093871683529290522054155b151561038f57600080fd5b600160a060020a03338116600081815260026020908152604080832094881680845294825291829020869055815186815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b60005481565b600080600160a060020a038416151561041357600080fd5b50600160a060020a03808516600081815260026020908152604080832033909516835293815283822054928252600190529190912054610459908463ffffffff61084316565b600160a060020a03808716600090815260016020526040808220939093559086168152205461048e908463ffffffff61085516565b600160a060020a0385166000908152600160205260409020556104b7818463ffffffff61084316565b600160a060020a038087166000818152600260209081526040808320338616845282529182902094909455805187815290519288169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3506001949350505050565b60065481565b60055481565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120548083111561058e57600160a060020a0333811660009081526002602090815260408083209388168352929052908120556105c5565b61059e818463ffffffff61084316565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902054825190815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b600160a060020a031660009081526001602052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561034a5780601f1061031f5761010080835404028352916020019161034a565b6000600160a060020a03831615156106b757600080fd5b600160a060020a0333166000908152600160205260409020546106e0908363ffffffff61084316565b600160a060020a033381166000908152600160205260408082209390935590851681522054610715908363ffffffff61085516565b600160a060020a038085166000818152600160209081526040918290209490945580518681529051919333909316927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600192915050565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120546107ae908363ffffffff61085516565b600160a060020a0333811660008181526002602090815260408083209489168084529482529182902085905581519485529051929391927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b60008282111561084f57fe5b50900390565b60008282018381101561086457fe5b93925050505600a165627a7a72305820f42dc60f20f8c3de30bba852a7049ab067e3a95907d56bc51a02ae968ef38c960029",
  "sourceMap": "341:34:6:-;298:375;341:34;;298:375;341:34;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;379:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;437:2;411:28;;475:5;443:37;;565:105;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;608:14:6;;594:11;:28;;;-1:-1:-1;;;;;637:10:6;628:20;;;:8;:20;;;;;:37;298:375;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;298:375:6;;;-1:-1:-1;298:375:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "298:375:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;341:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:34:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;341:34:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1482:534:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1482:534:7;-1:-1:-1;;;;;1482:534:7;;;;;;;;;;;;;;;;;;;;;;;;;179:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;179:26:2;;;;;;;;;;;;;;;;;;;;728:522:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;728:522:7;-1:-1:-1;;;;;728:522:7;;;;;;;;;;;;443:37:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;443:37:6;;;;411:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;411:28:6;;;;2975:404:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2975:404:7;-1:-1:-1;;;;;2975:404:7;;;;;;;960:104:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;960:104:0;-1:-1:-1;;;;;960:104:0;;;;;379:28:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;379:28:6;;;;431:327:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;431:327:0;-1:-1:-1;;;;;431:327:0;;;;;;;2708:263:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2708:263:7;-1:-1:-1;;;;;2708:263:7;;;;;;;2335:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2335:133:7;-1:-1:-1;;;;;2335:133:7;;;;;;;;;;341:34:6;;;;;;;;;;;;;;;-1:-1:-1;;341:34:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1482:534:7:-;1542:4;1852:11;;;1851:53;;-1:-1:-1;;;;;;1877:10:7;1869:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;:34;1851:53;1843:62;;;;;;;;-1:-1:-1;;;;;1920:10:7;1912:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;;:38;;;1956;;;;;;;;;;;;;;;;;-1:-1:-1;2007:4:7;1482:534;;;;:::o;179:26:2:-;;;;:::o;728:522:7:-;803:4;;-1:-1:-1;;;;;823:17:7;;;;815:26;;;;;;-1:-1:-1;;;;;;865:14:7;;;;;;;:7;:14;;;;;;;;880:10;865:26;;;;;;;;;;;;1063:15;;;:8;:15;;;;;;;:27;;1083:6;1063:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;1045:15:7;;;;;;;:8;:15;;;;;;:45;;;;1112:13;;;;;;;:25;;1130:6;1112:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1096:13:7;;;;;;:8;:13;;;;;:41;1172:22;:10;1187:6;1172:22;:14;:22;:::i;:::-;-1:-1:-1;;;;;1143:14:7;;;;;;;:7;:14;;;;;;;;1158:10;1143:26;;;;;;;;;;:51;;;;1200:28;;;;;;;;;;;1143:14;;1200:28;;;;;;;;;;;-1:-1:-1;1241:4:7;;728:522;-1:-1:-1;;;;728:522:7:o;443:37:6:-;;;;:::o;411:28::-;;;;:::o;2975:404:7:-;-1:-1:-1;;;;;3100:10:7;3092:19;;3056:12;3092:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;3131:27;;;3127:164;;;-1:-1:-1;;;;;3176:10:7;3168:19;;3200:1;3168:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;:33;3127:164;;;3254:30;:8;3267:16;3254:30;:12;:30;:::i;:::-;-1:-1:-1;;;;;3230:10:7;3222:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;:62;3127:164;-1:-1:-1;;;;;3305:10:7;3296:61;;3327:19;;;;:7;:19;;;;;;;;3296:61;;;3327:29;;;;;;;;;;;3296:61;;;;;;;;;;;;;;;;;-1:-1:-1;3370:4:7;;2975:404;-1:-1:-1;;;2975:404:7:o;960:104:0:-;-1:-1:-1;;;;;1043:16:0;1013:15;1043:16;;;:8;:16;;;;;;;960:104::o;379:28:6:-;;;;;;;;;;;;;;;-1:-1:-1;;379:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;431:327:0;487:4;-1:-1:-1;;;;;507:17:0;;;;499:26;;;;;;-1:-1:-1;;;;;627:10:0;618:20;;;;;:8;:20;;;;;;:32;;643:6;618:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;604:10:0;595:20;;;;;;:8;:20;;;;;;:55;;;;672:13;;;;;;;:25;;690:6;672:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;656:13:0;;;;;;;:8;:13;;;;;;;;;:41;;;;703:33;;;;;;;656:13;;712:10;703:33;;;;;;;;;;;;;-1:-1:-1;749:4:0;431:327;;;;:::o;2708:263:7:-;-1:-1:-1;;;;;2844:10:7;2836:19;;2784:12;2836:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;:46;;2870:11;2836:46;:33;:46;:::i;:::-;-1:-1:-1;;;;;2812:10:7;2804:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;;:78;;;2888:61;;;;;;;2804:29;;:19;;2888:61;;;;;;;;;;-1:-1:-1;2962:4:7;2708:263;;;;:::o;2335:133::-;-1:-1:-1;;;;;2438:15:7;;;2406:17;2438:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2335:133::o;544:105:5:-;597:7;619:6;;;;612:14;;;;-1:-1:-1;639:5:5;;;544:105::o;653:124::-;706:7;733:5;;;751:6;;;;744:14;;;;771:1;653:124;-1:-1:-1;;;653:124:5:o",
  "source": "pragma solidity ^0.4.11;\n\n\nimport \"./StandardToken.sol\";\n\n\n/**\n * @title SimpleToken\n * @dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. \n * Note they can later distribute these tokens as they wish using `transfer` and other\n * `StandardToken` functions.\n */\ncontract SimpleToken is StandardToken {\n\n  string public name = \"SimpleToken\";\n  string public symbol = \"SIM\";\n  uint256 public decimals = 18;\n  uint256 public INITIAL_SUPPLY = 10000;\n\n  /**\n   * @dev Contructor that gives msg.sender all of existing tokens. \n   */\n  function SimpleToken() {\n    totalSupply = INITIAL_SUPPLY;\n    balances[msg.sender] = INITIAL_SUPPLY;\n  }\n\n}\n",
  "sourcePath": "/Users/studnev/audit/OZT-studnev/contracts/SimpleToken.sol",
  "ast": {
    "absolutePath": "/Users/studnev/audit/OZT-studnev/contracts/SimpleToken.sol",
    "exportedSymbols": {
      "SimpleToken": [
        949
      ]
    },
    "id": 950,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 918,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/Users/studnev/audit/OZT-studnev/contracts/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 919,
        "nodeType": "ImportDirective",
        "scope": 950,
        "sourceUnit": 1197,
        "src": "27:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 920,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1196,
              "src": "322:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1196",
                "typeString": "contract StandardToken"
              }
            },
            "id": 921,
            "nodeType": "InheritanceSpecifier",
            "src": "322:13:6"
          }
        ],
        "contractDependencies": [
          76,
          119,
          148,
          1196
        ],
        "contractKind": "contract",
        "documentation": "@title SimpleToken\n@dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. \nNote they can later distribute these tokens as they wish using `transfer` and other\n`StandardToken` functions.",
        "fullyImplemented": true,
        "id": 949,
        "linearizedBaseContracts": [
          949,
          1196,
          76,
          119,
          148
        ],
        "name": "SimpleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 924,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 949,
            "src": "341:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 922,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "341:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53696d706c65546f6b656e",
              "id": 923,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "362:13:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_da035752f00a45fb4b10b269b9dcdc58efd98a12eda6b33da179acab837f7818",
                "typeString": "literal_string \"SimpleToken\""
              },
              "value": "SimpleToken"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 927,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 949,
            "src": "379:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 925,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "379:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53494d",
              "id": 926,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "402:5:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_f6fc0e115f393f52de8a1783205484e2c47c0ae0af6904170edd370a74c376e8",
                "typeString": "literal_string \"SIM\""
              },
              "value": "SIM"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 930,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 949,
            "src": "411:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 928,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "411:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 929,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "437:2:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 933,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 949,
            "src": "443:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 931,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "443:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 932,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "475:5:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 947,
              "nodeType": "Block",
              "src": "588:82:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 936,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "594:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 937,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 933,
                      "src": "608:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "594:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 939,
                  "nodeType": "ExpressionStatement",
                  "src": "594:28:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 940,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "628:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 943,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 941,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1211,
                          "src": "637:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "637:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "628:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 944,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 933,
                      "src": "651:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "628:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "628:37:6"
                }
              ]
            },
            "documentation": "@dev Contructor that gives msg.sender all of existing tokens. ",
            "id": 948,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "SimpleToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "585:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:0:6"
            },
            "scope": 949,
            "src": "565:105:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 950,
        "src": "298:375:6"
      }
    ],
    "src": "0:674:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/studnev/audit/OZT-studnev/contracts/SimpleToken.sol",
    "exportedSymbols": {
      "SimpleToken": [
        949
      ]
    },
    "id": 950,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 918,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/Users/studnev/audit/OZT-studnev/contracts/StandardToken.sol",
        "file": "./StandardToken.sol",
        "id": 919,
        "nodeType": "ImportDirective",
        "scope": 950,
        "sourceUnit": 1197,
        "src": "27:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 920,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1196,
              "src": "322:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$1196",
                "typeString": "contract StandardToken"
              }
            },
            "id": 921,
            "nodeType": "InheritanceSpecifier",
            "src": "322:13:6"
          }
        ],
        "contractDependencies": [
          76,
          119,
          148,
          1196
        ],
        "contractKind": "contract",
        "documentation": "@title SimpleToken\n@dev Very simple ERC20 Token example, where all tokens are pre-assigned to the creator. \nNote they can later distribute these tokens as they wish using `transfer` and other\n`StandardToken` functions.",
        "fullyImplemented": true,
        "id": 949,
        "linearizedBaseContracts": [
          949,
          1196,
          76,
          119,
          148
        ],
        "name": "SimpleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 924,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 949,
            "src": "341:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 922,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "341:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53696d706c65546f6b656e",
              "id": 923,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "362:13:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_da035752f00a45fb4b10b269b9dcdc58efd98a12eda6b33da179acab837f7818",
                "typeString": "literal_string \"SimpleToken\""
              },
              "value": "SimpleToken"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 927,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 949,
            "src": "379:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 925,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "379:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53494d",
              "id": 926,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "402:5:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_f6fc0e115f393f52de8a1783205484e2c47c0ae0af6904170edd370a74c376e8",
                "typeString": "literal_string \"SIM\""
              },
              "value": "SIM"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 930,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 949,
            "src": "411:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 928,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "411:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 929,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "437:2:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 933,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 949,
            "src": "443:37:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 931,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "443:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 932,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "475:5:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 947,
              "nodeType": "Block",
              "src": "588:82:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 936,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "594:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 937,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 933,
                      "src": "608:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "594:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 939,
                  "nodeType": "ExpressionStatement",
                  "src": "594:28:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 940,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "628:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 943,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 941,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1211,
                          "src": "637:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "637:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "628:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 944,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 933,
                      "src": "651:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "628:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 946,
                  "nodeType": "ExpressionStatement",
                  "src": "628:37:6"
                }
              ]
            },
            "documentation": "@dev Contructor that gives msg.sender all of existing tokens. ",
            "id": 948,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "SimpleToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "585:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "588:0:6"
            },
            "scope": 949,
            "src": "565:105:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 950,
        "src": "298:375:6"
      }
    ],
    "src": "0:674:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-24T18:54:09.897Z"
}